@model System.Collections.Generic.IEnumerable<TheWayFreeClinicVMS.Models.Worktime>

@{
    ViewBag.Title = "Worklog Data";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>WorklogData</h2>

<div class="container">
    <div class="col-md-12">
        <h2 style="text-align:center;">View Work Log</h2>

        <div class="form-group">
            @using (Html.BeginForm())
            {
                <p>
                    Find by name: @Html.TextBox("SearchString")
                    <input type="submit" value="Search" />
                    Specialty: @Html.DropDownList("specialtySearch", "All")
                    <input type="submit" value="Filter" />
                </p>
            }
        </div>
        <div>
            <p></p>
            <table class="table table-condensed table-hover">
                <tr>
                    <th></th>
                    <th>
                        @Html.ActionLink("Last Name", "WorklogData", new { sortOrder = ViewBag.NameSortParm })
                        <span class="glyphicon glyphicon-sort-by-attributes" aria-hidden="true"></span>
                    </th>
                    <th>
                        First Name
                    </th>
                    <th>
                        Specialty
                    </th>
                    <th>
                        @Html.ActionLink("Date of Entry", "WorklogData", new { sortOrder = ViewBag.DateSortParm })
                        <span class="glyphicon glyphicon-sort-by-attributes" aria-hidden="true"></span>
                    </th>
                    <th>
                        Signed-In
                    </th>
                    <th>
                        Signed-Out
                    </th>
                    <th></th>


                </tr>
                @foreach (var item in Model)
            {
                    <tr>
                        <td style="text-align:center; width:1%;">
                            <buttton name="" id="@Html.DisplayFor(modelItem => item.wrkID)" class="glyphicon" onclick="flagClick(this.attributes['name'].value);" style="color:red;"></buttton>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Volunteer.volLastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Volunteer.volFirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Volunteer.Specialty.spcName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.wrkDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.wrkStartTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.wrkEndTime)
                        </td>
                        <td>
                            @*Buttons for CRUD*@

                            <a href="@Url.Action("UpdateTimesheet", "AdminDashboard",new { id = item.wrkID })" class="btn btn-primary btn-xs"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Update</a>
                        </td>
                       
                    </tr>
                }

            </table>
        </div>
    </div>
</div>

<script>
    window.onload = function () 
    {
        var msgNum = @Html.Raw(Json.Encode(ViewBag.msgNum));
        var msgCode = @Html.Raw(Json.Encode(ViewBag.msgCode));
        var msgNumArr = [];
        var msgCodeArr = [];
        var i = 0;
        var txt;

        while (msgNum[i])
        {            
            msgNumArr.push(msgNum[i]);
            msgCodeArr.push(msgCode[i]);

            document.getElementById(msgNumArr[i]).classList.add("glyphicon-flag", "btn", "btn-xs", "btn-default");
            document.getElementById(msgNumArr[i]).setAttribute("name", msgCodeArr[i]);
            i++;
        }
    }

    function flagClick(name)
    {        
        switch(name)
        {
            case "1":
                alert("User signed out after 5PM. \n The system automatically adjusted sign-out time to 5PM \n Sign-out time can be changed manually by clicking Update button.");
                break;
            case "2":
                alert("User's sign-out occured a day or more after sign-in. \nThe system automatically adjusted sign-out time to 5PM for the day signed-in. \n\nThis record should be verified with the User. \nSign-out time can be changed manually by clicking Update button.");
                break;
        }
    }
</script>